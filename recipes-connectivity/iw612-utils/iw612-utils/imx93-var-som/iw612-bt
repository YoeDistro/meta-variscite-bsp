#!/bin/sh -e
#
# Activate Bluetooth on Variscite VAR-SOM-MX93
#

# Include common functions
. /etc/wifi/variscite-wireless
. /etc/gpiochip

gpio4=$(get_gpiochip "43830080.gpio")

# GPIO pin to enable BT module
BT_EN_GPIO="${gpio4} 15"

# btnxpuart fdt device compatible file
BT_FDT="/sys/firmware/devicetree/base/soc@0/bus@42000000/serial@42590000/bluetooth/compatible"

fdt_has_btnxpuart() {
	if [ -e "$BT_FDT" ] && grep -q "nxp,88w8987-bt" "$BT_FDT"; then
		return 0  # fdt has btnxpuart device
	else
		return 1  # fdt does not have btnxpuart device
	fi
}

# Enable BT via GPIO(s)
bt_enable()
{
	# Assert bluetooth/802.15.4 reset GPIO and disable BT uart buffer
	gpioset ${BT_EN_GPIO}=0
	sleep 0.1

	# Release bluetooth/802.15.4 reset GPIO and enable BT uart buffer
	gpioset ${BT_EN_GPIO}=1
	sleep 0.1
}

# Start BT hardware
bt_start()
{
	# Exit if BT module is not iw612 according to the device tree
	fdt_has_btnxpuart || exit 0

	# Exit if BT interface is already running
	if [ -e "/sys/class/bluetooth/hci0" ]; then
		echo "$(basename $0): Bluetooth already started"
		exit 0
	fi

	echo "$(basename $0): starting"

	# Enable BT hardware
	bt_enable

	# Load the NXP bluetooth driver
	modprobe btnxpuart

	# Fork a dummy process to satisfy the variscite-bt systemd service type=forking
	(while true; do sleep 60; done) &
}

# Stop BT hardware
bt_stop()
{
	# Exit if BT module is not iw612 according to the device tree
	fdt_has_btnxpuart || exit 0

	# Exit if BT interface is not available
	[ -e /sys/class/bluetooth/hci0 ] || exit 0

	echo "$(basename $0): stopping"

	# Bring up hci interface before unloading the BT module to allow the driver
	# to restore the baud rate to 115200bps and conditionally issue reset command
	hciconfig hci0 up

	# Unload the driver
	modprobe -r btnxpuart

	# Assert bluetooth/802.15.4 reset GPIO and disable BT uart buffer
	gpioset ${BT_EN_GPIO}=0
}

# Issue in-band reset using hci interface
in_band_reset()
{
	# Exit if BT module is not iw612 according to the device tree
	fdt_has_btnxpuart || exit 0

	# Exit if BT interface is not available
	[ -e /sys/class/bluetooth/hci0 ] || exit 0

	echo "$(basename $0): in-band reset"

	# Bring up hci interface before using hci commands
	hciconfig hci0 up

	# Issue the reset command
	hcitool cmd 0x3f 0xfc 0
}

###########################
#  Execution starts here  #
###########################
case $1 in

start)
	bt_start
	;;
stop)
	bt_stop
	;;
in-band-reset)
	in_band_reset
	;;
esac

exit 0
