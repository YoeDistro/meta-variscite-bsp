From a410188a34f8b73f3febf860cd240afca3b5c28d Mon Sep 17 00:00:00 2001
From: Natalia Kovalenko <natasha.k@variscite.com>
Date: Mon, 12 Feb 2024 17:41:09 +0100
Subject: [PATCH] gstreamer: Fix display fullscreen vertical positioning issue

Adjusts the height of the fullscreen display when the panel-position
is set to none in the weston.ini file.

Signed-off-by: Natalia Kovalenko <natasha.k@variscite.com>
---
 gst-libs/gst/wayland/gstwlutils.c  | 29 +++++++++++++++++++++++++----
 gst-libs/gst/wayland/gstwlutils.h  |  3 ++-
 gst-libs/gst/wayland/gstwlwindow.c |  6 +++---
 3 files changed, 30 insertions(+), 8 deletions(-)

diff --git a/gst-libs/gst/wayland/gstwlutils.c b/gst-libs/gst/wayland/gstwlutils.c
index 63e3c6f0c..867112b94 100644
--- a/gst-libs/gst/wayland/gstwlutils.c
+++ b/gst-libs/gst/wayland/gstwlutils.c
@@ -37,6 +37,8 @@

 #define WESTON_INI "/etc/xdg/weston/weston.ini"

+gint panel_height = PANEL_HEIGH;
+
 gboolean
 gst_wl_init_surface_state (GstWlDisplay * display, GstWlWindow * self)
 {
@@ -49,6 +51,7 @@ gst_wl_init_surface_state (GstWlDisplay * display, GstWlWindow * self)
   gboolean ret = TRUE;
   struct stat filestat;
   FILE *fp;
+  gchar *panel_position = NULL;

   if ((fd = open (path, O_RDONLY)) == -1) {
     return FALSE;
@@ -66,9 +69,6 @@ gst_wl_init_surface_state (GstWlDisplay * display, GstWlWindow * self)
   }

   while (fgets (line, sizeof line, fp)) {
-    if (found_config)
-      break;
-
     switch (line[0]) {
       case '#':
       case '\n':
@@ -107,6 +107,24 @@ gst_wl_init_surface_state (GstWlDisplay * display, GstWlWindow * self)
               found_config = TRUE;
             }
           }
+
+          if (strcmp (&line[0], "panel-position") == 0) {
+            p++;
+            while (isspace (*p))
+              p++;
+            i = strlen (p);
+            while (i > 0 && isspace (p[i - 1])) {
+              p[i - 1] = '\0';
+              i--;
+            }
+            if (strlen (p) > 0) {
+              if (panel_position)
+                g_free (panel_position);
+              panel_position = g_strdup (p);
+              if (panel_position && strcmp (panel_position, "none") == 0)
+                panel_height = 0;
+            }
+          }
         }
         continue;
     }
@@ -133,7 +151,10 @@ gst_wl_init_surface_state (GstWlDisplay * display, GstWlWindow * self)
       goto out;
     }
     gst_wl_window_set_fullscreen_width (self, desktop_width);
-    gst_wl_window_set_fullscreen_height (self, desktop_height - PANEL_HEIGH);
+    gst_wl_window_set_fullscreen_height (self, desktop_height - panel_height);
+    GST_WARNING
+      ("init surface_state to fullscreen (%dx%d) panel-height (%d)",
+        desktop_width, desktop_height - panel_height, panel_height);
   } else {
     ret = FALSE;
     goto out;
diff --git a/gst-libs/gst/wayland/gstwlutils.h b/gst-libs/gst/wayland/gstwlutils.h
index 90c3b0ecd..63397e651 100644
--- a/gst-libs/gst/wayland/gstwlutils.h
+++ b/gst-libs/gst/wayland/gstwlutils.h
@@ -31,7 +31,8 @@ G_BEGIN_DECLS
 /* FIXME: try to get from wayland server */
 #define PANEL_HEIGH 32

+extern gint panel_height;
 gboolean gst_wl_init_surface_state(GstWlDisplay * display, GstWlWindow * self);
 G_END_DECLS

-#endif
\ No newline at end of file
+#endif
diff --git a/gst-libs/gst/wayland/gstwlwindow.c b/gst-libs/gst/wayland/gstwlwindow.c
index 5a5affd94..7efd9e566 100644
--- a/gst-libs/gst/wayland/gstwlwindow.c
+++ b/gst-libs/gst/wayland/gstwlwindow.c
@@ -487,11 +487,11 @@ gst_wl_window_new_internal (GstWlDisplay * display, GMutex * render_lock)

   if (!gst_wl_init_surface_state (display, self)) {
     priv->fullscreen_width = width;
-    priv->fullscreen_height = height - PANEL_HEIGH;
+    priv->fullscreen_height = height - panel_height;
     priv->scale = 1;
     GST_WARNING
-        ("init surface_state fail, fallback to scale=%d fullscreen (%dx%d)",
-        priv->scale, priv->fullscreen_width, priv->fullscreen_height);
+        ("init surface_state fail, fallback to scale=%d fullscreen (%dx%d) panel-height (%d)",
+        priv->scale, priv->fullscreen_width, priv->fullscreen_height, panel_height);
   }

   return self;
--
2.34.1
